
// THIS FILE IS AUTOGENERATED WHEN PAGES ARE UPDATED
import { lazy } from "react";
import { RouteObject } from "react-router";



const AiChat = lazy(() => import("./pages/AiChat.tsx"));
const ApiDocs = lazy(() => import("./pages/ApiDocs.tsx"));
const App = lazy(() => import("./pages/App.tsx"));
const Automations = lazy(() => import("./pages/Automations.tsx"));
const Dashboard = lazy(() => import("./pages/Dashboard.tsx"));
const DataCleaning = lazy(() => import("./pages/DataCleaning.tsx"));
const DataConnectors = lazy(() => import("./pages/DataConnectors.tsx"));
const ExportProject = lazy(() => import("./pages/ExportProject.tsx"));
const Integrations = lazy(() => import("./pages/Integrations.tsx"));
const McpServer = lazy(() => import("./pages/McpServer.tsx"));
const ModelComparison = lazy(() => import("./pages/ModelComparison.tsx"));
const ModelManagement = lazy(() => import("./pages/ModelManagement.tsx"));
const ModelSync = lazy(() => import("./pages/ModelSync.tsx"));
const Monitoring = lazy(() => import("./pages/Monitoring.tsx"));
const Settings = lazy(() => import("./pages/Settings.tsx"));
const Terminal = lazy(() => import("./pages/Terminal.tsx"));

export const userRoutes: RouteObject[] = [

	{ path: "/ai-chat", element: <AiChat />},
	{ path: "/aichat", element: <AiChat />},
	{ path: "/api-docs", element: <ApiDocs />},
	{ path: "/apidocs", element: <ApiDocs />},
	{ path: "/", element: <App />},
	{ path: "/automations", element: <Automations />},
	{ path: "/dashboard", element: <Dashboard />},
	{ path: "/data-cleaning", element: <DataCleaning />},
	{ path: "/datacleaning", element: <DataCleaning />},
	{ path: "/data-connectors", element: <DataConnectors />},
	{ path: "/dataconnectors", element: <DataConnectors />},
	{ path: "/export-project", element: <ExportProject />},
	{ path: "/exportproject", element: <ExportProject />},
	{ path: "/integrations", element: <Integrations />},
	{ path: "/mcp-server", element: <McpServer />},
	{ path: "/mcpserver", element: <McpServer />},
	{ path: "/model-comparison", element: <ModelComparison />},
	{ path: "/modelcomparison", element: <ModelComparison />},
	{ path: "/model-management", element: <ModelManagement />},
	{ path: "/modelmanagement", element: <ModelManagement />},
	{ path: "/model-sync", element: <ModelSync />},
	{ path: "/modelsync", element: <ModelSync />},
	{ path: "/monitoring", element: <Monitoring />},
	{ path: "/settings", element: <Settings />},
	{ path: "/terminal", element: <Terminal />},

];
